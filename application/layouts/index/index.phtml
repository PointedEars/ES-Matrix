<?php
  if (!$this->edit)
  {
?>
    <div id="abstract">
      <h2>Abstract</h2>
    
      <blockquote class="shy">
        <p>“ECMAScript is a standard for object-oriented programming languages.
           Superficially, its implementations, like JavaScript and JScript,
           are very similar. They are therefore often discussed in a
           simplified way. But does this approach hold water against
           methodical testing?</p>
           
        <p>In this work, features of ECMAScript and its common
           implementations are compared with regard to their standards
           compliance and compatibility. A web application is created
           for the registration of features and associated test cases.
           Using this application, the test cases are run in web browsers
           and the test results are stored in a database. The results
           are correlated with the market share of the used web browsers
           and their degree of vendor support. Thus, features can be
           defined as safe for use in web browsers, which makes
           efficiency-reducing compatibility measures unnecessary.”<?php
         echo $this->footnotes->add('abstract', null,
             'from: Lahn,&nbsp;Thomas (2012-03-12). <i>Features von
             ECMAScript-basierten Programmiersprachen – Eine vergleichende
             Analyse (“Features of ECMAScript-based
             programming languages – A&nbsp;comparative analysis”)</i>
             <em>(revised)</em>. <abbr title="Bachelor of Science"
             >BSc</abbr>&nbsp;<a href="http://www.supsi.ch/"><abbr
             title="Scuola universitaria professionale della Svizzera italiana"
             >SUPSI</abbr></a> in Computer Science. <a href="http://www.ffhs.ch/"
             >Fernfachhochschule Schweiz</a> (Swiss Distance-Learning
             University of Applied&nbsp;Sciences).', ''); ?></p>
      </blockquote>
    </div>
    
    <div id="foreword">
      <h2>Foreword and Rationale</h2>

      <blockquote>
        <p style="margin-bottom: 0; font-style: italic"
           ><span lang="x-vulcan">&gt;Oren'uh pa'shi-nahpau.
            Oren'uh fai-tukh t'natyan — nam-tor vellar heh ri nam-tor.&lt;</span><br>
            (“Learn to think clearly.
            Learn to distinguish: what is, and what seems to be.”)</p>
        <div style="text-align: right"> —&nbsp;Surak<?php
              echo $this->footnotes->add('vli', null, 'see also:
                <a href="http://stogeek.com/wiki/Category:Vulcan_Language_Institute"
                   >Vulcan Language Institute</a>', ''); ?></div>
      </blockquote>
      
      <p>Many people talk about <strong>JavaScript</strong> as if
         it was one fully specified and universally implemented
         programming language.  But it is in fact only the name of
         one implementation of a standard for an extensible
         programming language, <strong>ECMAScript</strong>, which
         has <em>several implementations</em> that are widely
         distributed.</p>
         
      <p>This standard – the ECMAScript Language Specification –
         is published in Editions.  While several current versions
         of programming languages are implementations of ECMAScript,
         the first Edition of ECMAScript was based on two programming
         languages that were already implemented for use in Web browsers:
         Netscape JavaScript 1.1 and Microsoft JScript 1.0.</p>
                  
      <p>Superficially, ECMAScript implementations are very similar.
         It is therefore tempting to discuss them in a simplified way
         using an umbrella term.  Often that term is “JavaScript” or,
         supposedly in order to avoid misunderstandings, variations
         in letter case thereof, such as “Javascript” and “javascript”
         (the latter term is currently used in the
         <a href="http://jibbering.com/faq/">comp.lang.javascript FAQ</a>).</p>
         
      <p>Although this approach is common, it is not without problems.
         ECMAScript gives its conforming implementations a wide latitude.
         The Editions of ECMAScript and their implementations
         have been developed in parallel, and are partially
         informing each other.  Also, some implementations are not
         conforming in some features.  As a result, ECMAScript
         implementations are in fact very different from one another.</p>
         
      <p>Hence, it does matter which implementation is being discussed.
         Using ambiguous umbrella terms such as the ones mentioned,
         without providing a clear definition for them, cannot be
         considered appropriate style in a technical discussion.</p>
      
      <p>Therefore, for lack of a better alternative, the precise and equally
         concise term <strong>ECMAScript implementation(s)</strong> should be
         used when talking about features that several implementations (ought
         to) have in common (per the ECMAScript Language Specification).  And
         whenever it was talked about one particular implementation, its proper
         name should be used, like <strong>Netscape/Mozilla.org JavaScript</strong>
         or simply <strong>JavaScript</strong> (if there is doubt, "™" might
         be added to emphasize that the implementation is meant).  <strong>In all
         other instances, the term “JavaScript” (any capitalization) should
         <em>not</em> be used.</strong></p>
          
      <p>This overview began as a comparison of different “JavaScript” features
         and, as time passed and understanding grew, evolved into a comparison
         between the major ECMAScript implementations, detailing the differences,
         the quirks and the bugs.  It has served its author (and its dedicated
         readers) for years in writing client-side scripts that work cross-browser,
         and helped to see the distinction between core language features, and
         APIs with language binding, like the DOM.  (The features of the latter
         API will be compared in another Matrix.)</p>
         
      <p>Whenever you read from this author that key line from arguably
         <a href="http://en.wikipedia.org/wiki/The_Matrix"
            title="The Matrix movie on Wikipedia"
            >the most groundbreaking hacker movie</a>
         &#8213;“The Matrix has you!”&#8213; a suggestion
         is being considered as a
         <a href="#contributors">contribution</a> to this work.
         See below.</p>
    </div>
   
    <div>
      <h2><a name="features" id="features">Language&nbsp;Features</a></h2>
      
      <div><a href="#toc">&#8593; Table of contents</a></div>

      <p>The following table lists features of ECMAScript and its
        implementations, with the Edition or version that introduced
        it; furthermore, information about features that have been
        deprecated is included.</p>
        
      <p>Features are <span class="safe"><span class="visual">highlighted
        with a greenish background color</span></span> if they can be
        considered <em>safe</em> to use without prior feature test
        even when they do not appear to be formally specified or
        to be supported among all versions of all implementations
        considered here.  This is based on the fact that all minimum
        versions of the implementations that a&nbsp;feature
        requires can be considered obsolete because the user&nbsp;agents
        known to implement them can be considered obsolete (see the
        respective <a href="#version-info">version information</a>
        for details).  Note that this assessment is likely to be
        subject to change as more implementations are investigated.
        If taken as a&nbsp;recommendation for design decisions,
        it should be taken as a light&nbsp;one.</p>
        
      <p><strong>The contents of this table are based on what could be found in
        the Editions of ECMAScript and in vendor's online documentation to date.
        They are completed with results from test cases that have been run in a
        careful selection of <a href="#environments">host environments</a>,
        <em>and do not claim to be accurate or complete</em>.  Any correction/addition
        as to how things really are is welcome and will be
        <a href="#contributors">credited</a> where it is due.</strong></p>
    </div>
<?php
    if ($_SERVER['HTTP_HOST'] === 'localhost')
    {
      ?><a href="<?php echo $this->escape($this->getURL(null, 'edit')); ?>">Edit</a><?php
    }
  }
  else
  {
?>
     <a href="<?php echo $this->escape($this->getURL(null, 'endEdit')); ?>">End Edit</a>
<?php
  }
?>
    <form action="<?php echo $this->escape($this->getURL(null, 'saveResult')); ?>" method="POST">
      <table id="features-table"
             summary="Language features and the first editions of ECMAScript or first versions of the implementations that introduced or supported them">
        <thead>
          <?php require_once 'features-head.phtml'; ?>
        </thead>
        <tfoot>
          <?php require_once 'env-list.phtml'; ?>
        </tfoot>
        <tbody id="scroller" class="scroll">
          <?php require_once 'features-list.phtml'; ?>
        </tbody>
      </table>
    </form>
<?php $this->footnotes->flush(); ?>