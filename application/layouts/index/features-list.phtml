<?php
  use \PointedEars\PHPX\Application;

  function valueToString($value, $key)
  {
    return 'Test ' . ($key + 1) . ': ' . (($value === '1') ? "passed" : "failed");
  }

  $oldAnchor = '';
  foreach ($this->features as $key => $feature)
  {
?>
          <tr<?php if ($this->isSafe($feature->id)) { ?> class="safe"<?php } ?>>
<?php
    if ($this->edit)
    {
?>
            <td><a href="<?php echo $this->escape($this->getURL('feature', 'edit', $feature->id)); ?>"
                   class="edit">Edit</a>
                <form action="<?php echo $this->escape($this->getURL('feature', 'delete', $feature->id)); ?>" method="POST"
                      onsubmit="return window.confirm('Delete feature &quot;<?php echo addslashes($this->escape(strip_tags($feature->code))); ?>&quot;?')"
                      style="display: inline">
                  <input type="hidden" name="id" value="<?php echo $feature->id; ?>">
                  <button type="submit" name="action" value="delete" class="delete">Delete</button>
                </form></td>
<?php
    }
?>
            <th id="feature<?php echo $feature->id; ?>"<?php
                if ($feature->title)
                {
                  ?> title="<?php echo $this->escape($feature->title); ?>"<?php
                }
                ?>><?php
                $code = $feature->code;

                $untagged = strtolower(substr(strip_tags($code), 0, 1));

                if (preg_match('/[!a-z]/i', $untagged) && ($untagged !== $oldAnchor))
                {
                  ?><a name="<?php echo $untagged; ?>" id="<?php echo $untagged; ?>"></a><?php
                  $oldAnchor = $untagged;
                }

                echo $code;

                if ($feature->versioned)
                {
                  echo $this->footnotes->add('decl-ver', '<abbr title="Versioned">V<abbr>',
                    'At least the version of the implementation that introduced the feature
                      needs to be declared in order to use this feature (without syntax error).');
                }
                ?></th>
            <td><?php
              $edition = $feature->edition;
              if ($edition)
              {
                if ($edition === '-')
                {
                  ?><span title="Non-standard">&#8722;</span><?php
                }
                else
                {
                  echo $edition;

                  if ($feature->section)
                  {
                    ?> <span class="section" title="Specification section">[<?php
                      echo $feature->section;
                    ?>]</span><?php
                  }
                }

                if ($feature->generic)
                {
                  echo $this->footnotes->add('generic', '<abbr title="Intentionally generic">G</abbr>',
                    'This method is intentionally specified or implemented as <em>generic</em>;
                    it does not require that its <code class="rswd">this</code>
                    value be an object of the same type. Therefore, it can be
                    transferred to other kinds of objects for use as a method.'
                    . $this->footnotes->add('es5.1', null,
                        'Ecma&nbsp;International (2011&#8209;06).
                         <a href="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf"
                            ><i>Standard ECMA&#8210;262. ECMAScript Language Specification.</i>
                         5.1 Edition.</a> (retrieved 2011&#8209;08&#8209;27)'));
                }
              }
            ?></td>
            <td<?php
              $id = 'td' . ($key + 1);
              $testcases = $feature->testcases;
              if (count($testcases) > 0)
              {
                echo " id='$id'";
                echo ' title="'
                  . $this->escape(
                      implode("\n\n",
                        array_map(
                          create_function('$e, $i', 'return "Test " . ($i + 1) . ": " . $e->code;'),
                          $testcases, array_keys($testcases)
                        )
                      )
                    )
                  . '"';
              }
              else
            {
                echo ' title="Not applicable: No automated test case'
                  . ' is available for this feature.  If possible, please'
                  . ' click the feature code in the first column to run'
                  . ' a manual test."';
              }
              ?>><?php
              if (count($testcases) > 0)
              {
                ?><script type="text/javascript">
                    var results = new Array();
                  </script><?php
                foreach ($testcases as $testcase_key => $testcase)
                {
                  ?><script type="text/javascript">
                    var result = false;
                  </script>
                  <script type="<?php
                    if ($testcase->alt_type)
                    {
                      echo $this->escape($testcase->alt_type);
                    }
                    else
                    {
                      echo 'text/javascript';
                    }
                    ?>">
                    <?php
                      $code = $testcase->code;
                      if ($testcase->quoted)
                      {
                        $code = '"' . preg_replace('/(\\r?\\n|\\r)/', '\\n', addslashes($code)) . '"';
                      }
                    ?>
                    result = jsx.debug.test(<?php echo str_replace('</', '<\\/', $code); ?>, true, false);
                  </script>
                  <script type="text/javascript">
                    results[<?php echo $testcase_key; ?>] = result;
                    document.write('<input type="hidden" name="results[<?php echo $testcase->id; ?>]" value="' + (result ? '1' : '0') + '">');
                  </script><?php
                }
                ?><script type="text/javascript">
                  var count = 0;
                  var resultsStr = "";
                  for (var i = 0, len = results.length; i < len; ++i)
                  {
                    var result = results[i];
                    if (result)
                    {
                      ++count;
                    }

                    resultsStr += "Test " + (i + 1) + ": "
                      + (result ? "passed" : "failed")
                      + (i < results.length - 1 ? "\n" : "");
                  }

                  var text = (count == len) ? "+" : (count == 0 ? "&#8722;" : "*");

                  document.write('<span title="' + resultsStr + '">' + text + '<\/span>');
                </script><?php
              }
              else
            {
                echo '<abbr>N/A</abbr>';
              }
              ?></td>
<?php
    /* No results to show if there are no testcases */
    $num_testcases = count($feature->testcases);
    if ($num_testcases > 0)
    {
      $feature_results = Application::getParam('forFeatures', $this->results);
      if (is_array($feature_results))
      {
        $impl_results = Application::getParam($feature->id, $feature_results);
        if (is_array($implementations) && is_array($impl_results))
        {
          foreach ($implementations as $key => $implementation)
          {
?>
      			<td><?php
      			  $impl_result = Application::getParam($implementation->id, $impl_results);
      			  if (is_array($impl_result))
      			  {
      			    ?><table class="results"><?php
      			    $prev_values = '-';

        			  foreach ($impl_result as $version_id => $result)
        			  {
        			    $values = $result['values'];

        			    $value_array = str_split($values);
        			    $successes = array_sum($value_array);
        			    if ($successes === 0)
        			    {
        			      $success_string = '&#8722;';
        			    }
      			      else if ($successes < $num_testcases)
        			    {
        			      $success_string = '*';
        			    }
        			    else
        			    {
        			      $success_string = '+';
        			    }

        			    if ($values !== $prev_values)
        			    {
        			      ?><tr>
                      <th><?php echo $result['version']; ?></th>
                      <td title="<?php
                            echo implode("\n", array_map(
                            				'valueToString', $value_array, array_keys($value_array)
                                  )); ?>"
                          ><?php echo $successes. '/' . $num_testcases
                                  . '&nbsp;(' . $success_string . ')'; ?></td>
                    </tr><?php
                    $prev_values = $values;
        			    }
        			  }
        			  ?>
                </table><?php
      			  }
      			  ?></td>
<?php
          }
        }
      }
    }
?>
          </tr>
<?php
  }
?>
